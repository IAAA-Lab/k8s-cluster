apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      # We only deploy minio to the specified nodes. select your nodes by using `kubectl label node hostname1 -l minio-server=true`
      nodeSelector:
        node-role.kubernetes.io/s3: "true"
      # This is to maximize network performance, the headless service can be used to connect to a random host.
      hostNetwork: true
      # We're just using a hostpath. This path must be the same on all servers, and should be the largest, fastest block device you can fit.
      volumes:
        - name: storage
          hostPath:
            path: /mnt/minio/
      containers:
        - name: minio
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: access_key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: secret_key
          image: minio/minio:RELEASE.2019-04-09T01-22-30Z
          # Unfortunately you must manually define each server. Perhaps autodiscovery via DNS can be implemented in the future.
          args:
            - server
            - http://192.168.1.10:9000/data
            - http://192.168.1.11:9000/data
            - http://192.168.1.12:9000/data
            - http://192.168.1.13:9000/data
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: storage
              mountPath: /data
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio
